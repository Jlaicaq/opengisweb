// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.opengis.gvnix;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import org.opengis.gvnix.Parcela;
import org.opengis.gvnix.Usuario;

privileged aspect Parcela_Roo_Finder {
    
    public static TypedQuery<Parcela> Parcela.findParcelasByNumero(int numero) {
        EntityManager em = Parcela.entityManager();
        TypedQuery<Parcela> q = em.createQuery("SELECT o FROM Parcela AS o WHERE o.numero = :numero", Parcela.class);
        q.setParameter("numero", numero);
        return q;
    }
    
    public static TypedQuery<Parcela> Parcela.findParcelasByPartida(int partida) {
        EntityManager em = Parcela.entityManager();
        TypedQuery<Parcela> q = em.createQuery("SELECT o FROM Parcela AS o WHERE o.partida = :partida", Parcela.class);
        q.setParameter("partida", partida);
        return q;
    }
    
    public static TypedQuery<Parcela> Parcela.findParcelasByPoblacion(int poblacion) {
        EntityManager em = Parcela.entityManager();
        TypedQuery<Parcela> q = em.createQuery("SELECT o FROM Parcela AS o WHERE o.poblacion = :poblacion", Parcela.class);
        q.setParameter("poblacion", poblacion);
        return q;
    }
    
    public static TypedQuery<Parcela> Parcela.findParcelasByPoligono(int poligono) {
        EntityManager em = Parcela.entityManager();
        TypedQuery<Parcela> q = em.createQuery("SELECT o FROM Parcela AS o WHERE o.poligono = :poligono", Parcela.class);
        q.setParameter("poligono", poligono);
        return q;
    }
    
    public static TypedQuery<Parcela> Parcela.findParcelasByPropietario(Usuario propietario) {
        if (propietario == null) throw new IllegalArgumentException("The propietario argument is required");
        EntityManager em = Parcela.entityManager();
        TypedQuery<Parcela> q = em.createQuery("SELECT o FROM Parcela AS o WHERE o.propietario = :propietario", Parcela.class);
        q.setParameter("propietario", propietario);
        return q;
    }
    
    public static TypedQuery<Parcela> Parcela.findParcelasByProvincia(int provincia) {
        EntityManager em = Parcela.entityManager();
        TypedQuery<Parcela> q = em.createQuery("SELECT o FROM Parcela AS o WHERE o.provincia = :provincia", Parcela.class);
        q.setParameter("provincia", provincia);
        return q;
    }
    
    public static TypedQuery<Parcela> Parcela.findParcelasByProvinciaAndPoblacionAndNumero(int provincia, int poblacion, int numero) {
        EntityManager em = Parcela.entityManager();
        TypedQuery<Parcela> q = em.createQuery("SELECT o FROM Parcela AS o WHERE o.provincia = :provincia AND o.poblacion = :poblacion AND o.numero = :numero", Parcela.class);
        q.setParameter("provincia", provincia);
        q.setParameter("poblacion", poblacion);
        q.setParameter("numero", numero);
        return q;
    }
    
}
